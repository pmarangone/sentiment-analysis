name: sentiment-analysis-v04
services:
  # postgres:
  #   image: postgres:13
  #   container_name: postgres-sentiment-analysis
  #   environment:
  #     - POSTGRES_DB=database
  #     - POSTGRES_USER=user
  #     - POSTGRES_PASSWORD=password
  #   ports:
  #     - "5432:5432"
  #   networks:
  #     - sentiment-network

  # rabbitmq:
  #   image: rabbitmq:3.12-management
  #   container_name: rabbitmq-sentiment-analysis
  #   ports:
  #     - "5672:5672"  
  #     - "15672:15672"  
  #   environment:
  #     RABBITMQ_DEFAULT_USER: guest
  #     RABBITMQ_DEFAULT_PASS: guest
  #   volumes:
  #     - rabbitmq_data:/var/lib/rabbitmq
  #   networks:
  #     - sentiment-network

  # consumer:
  #   build:
  #     context: ./consumer
  #     dockerfile: Dockerfile
  #   container_name: sentiment-analysis-consumer
  #   environment:
  #     - DATABASE_URL=postgresql+psycopg://user:password@postgres:5432/database
  #     - RABBITMQ_URI=amqp://guest:guest@rabbitmq:5672
  #     - POOL_SIZE=3
  #     - MAX_RETRIES=3
  #   depends_on:
  #     - postgres
  #     - rabbitmq
  #   networks:
  #     - sentiment-network

  prometheus:
    image: docker.io/prom/prometheus:v3.1.0 # Changed to 'latest' for simplicity or specify a desired version
    container_name: prometheus-v07
    ports:
      - 9090:9090
    command: "--config.file=/etc/prometheus/prometheus.yaml --storage.tsdb.path=/prometheus" # Added storage path
    volumes:
      - ./configs/prometheus.yaml:/etc/prometheus/prometheus.yaml:ro
      - prometheus:/prometheus
    restart: unless-stopped
    networks:
      - monitoring-network

  loki:
    image: grafana/loki:latest
    container_name: loki-v07
    volumes:
      - ./configs/loki.yaml:/etc/loki/config.yaml:ro
      - data_loki:/loki:rw
    ports:
      - "3100:3100"
    restart: unless-stopped
    networks:
      - monitoring-network

  grafana:
    image: docker.io/grafana/grafana-oss:11.5.1
    container_name: grafana-v07
    ports:
      - "3000:3000"
    volumes:
      - grafana:/var/lib/grafana
    restart: unless-stopped
    networks:
      - monitoring-network


  sentiment-analysis:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: sentiment-analysis-server-v07
    ports:
      - "8000:8000"
    env_file:
      - ./backend/.env
    # depends_on:
    #   - postgres
    #   - rabbitmq
    networks:
      - monitoring-network

volumes:
  prometheus:
  grafana:
  data_loki:
    driver: local

networks:
  monitoring-network:
    driver: bridge